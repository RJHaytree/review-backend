{
  "stats": {
    "suites": 37,
    "tests": 76,
    "passes": 76,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-15T11:18:52.383Z",
    "end": "2022-05-15T11:18:53.440Z",
    "duration": 1057,
    "testsRegistered": 76,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f04c5bb5-b4ec-4535-88f1-ef382f463d04",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48c59e6a-8d2f-4330-af39-e84c4ff763c3",
          "title": "POST user endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully register a new user",
              "fullTitle": "POST user endpoint It should successfully register a new user",
              "timedOut": false,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = {\n    username: 'mochatest',\n    password: 'Password123.',\n    email: 'mochatest@test.com',\n    organisation: 'Mocha',\n    card_num: '',\n    card_expiry: '',\n    card_cvv: ''\n};\nchai.request(server)\n    .post(\"/user/register\")\n    .send(user)\n    .end((error, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('id');\n        response.body.success.payload.should.have.property('username');\n        response.body.success.payload.should.have.property('email');\n        response.body.success.payload.should.have.property('organisation');\n        done();\n    })",
              "err": {},
              "uuid": "ab09f964-e016-4e48-8cbe-2199387f2fb1",
              "parentUUID": "48c59e6a-8d2f-4330-af39-e84c4ff763c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to register a new user",
              "fullTitle": "POST user endpoint It should fail to register a new user",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = {\n    username: '',\n    password: 'Password123.',\n    email: 'mochatest@test.com',\n    organisation: 'Mocha',\n    card_num: '',\n    card_expiry: '',\n    card_cvv: ''\n};\nchai.request(server)\n    .post(\"/user/register\")\n    .send(user)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    });",
              "err": {},
              "uuid": "607bb0f6-2780-412c-981b-693c163a1455",
              "parentUUID": "48c59e6a-8d2f-4330-af39-e84c4ff763c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab09f964-e016-4e48-8cbe-2199387f2fb1",
            "607bb0f6-2780-412c-981b-693c163a1455"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 106,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95d726e9-d4db-473c-b961-4c6cc7ce7056",
          "title": "AUTHENTICATE user endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully authenticate the user",
              "fullTitle": "AUTHENTICATE user endpoint It should successfully authenticate the user",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = {\n    uid: 'mochatest',\n    password: 'Password123.'\n};\n    \nchai.request(server)\n    .post(\"/user/auth\")\n    .send(user)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.header.should.have.property('auth-token');\n        auth_token = response.header['auth-token'];\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('username');\n        response.body.success.payload.should.have.property('organisation');\n        done();\n    });",
              "err": {},
              "uuid": "66cd6c0b-9249-4cd6-8020-7538e787c4d5",
              "parentUUID": "95d726e9-d4db-473c-b961-4c6cc7ce7056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to authenticate the user",
              "fullTitle": "AUTHENTICATE user endpoint It should fail to authenticate the user",
              "timedOut": false,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = {\n    uid: 'mochatest',\n    password: 'Pass123.'\n};\nchai.request(server)\n    .post(\"/user/auth\")\n    .send(user)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    })",
              "err": {},
              "uuid": "1c160846-3f74-45d7-b34d-70065d94dafb",
              "parentUUID": "95d726e9-d4db-473c-b961-4c6cc7ce7056",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66cd6c0b-9249-4cd6-8020-7538e787c4d5",
            "1c160846-3f74-45d7-b34d-70065d94dafb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 131,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4aea8d6d-72ac-40f7-b4e1-1f70e2b23f76",
          "title": "GET user endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return the user",
              "fullTitle": "GET user endpoint It should successfully return the user",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/get\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('username');\n        response.body.success.payload.should.have.property('email');\n        response.body.success.payload.should.have.property('organisation');\n        response.body.success.payload.should.not.have.property('password');\n        done();\n    })",
              "err": {},
              "uuid": "11982c9a-dc39-4ef3-a03b-1889ca3a6e7a",
              "parentUUID": "4aea8d6d-72ac-40f7-b4e1-1f70e2b23f76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to return the user",
              "fullTitle": "GET user endpoint It should fail to return the user",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/get\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "67d39d20-9225-4525-ba2d-d87e3b497db4",
              "parentUUID": "4aea8d6d-72ac-40f7-b4e1-1f70e2b23f76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11982c9a-dc39-4ef3-a03b-1889ca3a6e7a",
            "67d39d20-9225-4525-ba2d-d87e3b497db4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "847ae271-6a01-4e99-9aa4-6d8f43f6c67f",
          "title": "POST key endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully post a new api key",
              "fullTitle": "POST key endpoint It should successfully post a new api key",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .post(\"/user/keys/new\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('id');\n        response.body.success.payload.should.have.property('key');\n        response.body.success.payload.should.have.property('date_generated');\n        response.body.success.payload.should.have.property('enabled');\n        response.body.success.payload.should.have.property('user_id');\n        api_key_id = response.body.success.payload['id'];\n        done();\n    })",
              "err": {},
              "uuid": "3312b207-d2fc-40b0-a04a-602200aff40f",
              "parentUUID": "847ae271-6a01-4e99-9aa4-6d8f43f6c67f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to successfully post a new api key",
              "fullTitle": "POST key endpoint It should fail to successfully post a new api key",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .post(\"/user/keys/new\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "40067525-5696-4fea-a064-0399fb36f051",
              "parentUUID": "847ae271-6a01-4e99-9aa4-6d8f43f6c67f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3312b207-d2fc-40b0-a04a-602200aff40f",
            "40067525-5696-4fea-a064-0399fb36f051"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5bf8eda9-1f8f-4b6b-a9a6-1036d049aa6b",
          "title": "GET ALL keys endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all keys",
              "fullTitle": "GET ALL keys endpoint It should successfully return all keys",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/keys/all\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "a98d3f32-ef45-40e9-b022-c29f818ed5cb",
              "parentUUID": "5bf8eda9-1f8f-4b6b-a9a6-1036d049aa6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to successfully return all keys",
              "fullTitle": "GET ALL keys endpoint It should fail to successfully return all keys",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/keys/all\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "f248a5a2-d499-493c-b57b-f8971d4c8932",
              "parentUUID": "5bf8eda9-1f8f-4b6b-a9a6-1036d049aa6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a98d3f32-ef45-40e9-b022-c29f818ed5cb",
            "f248a5a2-d499-493c-b57b-f8971d4c8932"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5296573c-fbca-47dd-8791-1aa1a25ecf68",
          "title": "UPDATE key endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully toggle the key",
              "fullTitle": "UPDATE key endpoint It should successfully toggle the key",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .put(\"/user/keys/\" + api_key_id)\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('enabled').eq(false);\n        done();\n    })",
              "err": {},
              "uuid": "7c799fe2-cde2-497f-9f2c-41a9dd2baa73",
              "parentUUID": "5296573c-fbca-47dd-8791-1aa1a25ecf68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to successfully toggle the key - invalid auth token",
              "fullTitle": "UPDATE key endpoint It should fail to successfully toggle the key - invalid auth token",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/keys/\" + api_key_id)\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(404);\n        done();\n    })",
              "err": {},
              "uuid": "98ff5c6d-97d5-41e0-9315-51d2239f0976",
              "parentUUID": "5296573c-fbca-47dd-8791-1aa1a25ecf68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to successfully toggle the key - invalid key",
              "fullTitle": "UPDATE key endpoint It should fail to successfully toggle the key - invalid key",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/keys/\" + invalid_api_key_id)\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(404);\n        done();\n    })",
              "err": {},
              "uuid": "d327ee93-462e-450d-999e-5c18d31483d7",
              "parentUUID": "5296573c-fbca-47dd-8791-1aa1a25ecf68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c799fe2-cde2-497f-9f2c-41a9dd2baa73",
            "98ff5c6d-97d5-41e0-9315-51d2239f0976",
            "d327ee93-462e-450d-999e-5c18d31483d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c362332f-d86c-4230-a15e-82570b8c44e7",
          "title": "DELETE key endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully delete the API key",
              "fullTitle": "DELETE key endpoint It should successfully delete the API key",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { api_key_ids: [] };\nreq.api_key_ids.push(api_key_id);\n    \nchai.request(server)\n    .delete(\"/user/keys\")\n    .set('auth-token', auth_token)\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.success.should.have.property('payload').eq('API keys deleted.');\n        done();\n    });",
              "err": {},
              "uuid": "af24a26d-af7d-4b43-ad06-4d0f1ddfdd45",
              "parentUUID": "c362332f-d86c-4230-a15e-82570b8c44e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully delete the API key",
              "fullTitle": "DELETE key endpoint It should not successfully delete the API key",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { api_key_ids: [] };\nreq.api_key_ids.push(invalid_api_key_id);\nchai.request(server)\n    .delete(\"/user/keys\")\n    .set('auth-token', auth_token)\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    })",
              "err": {},
              "uuid": "61309302-3b36-42d4-8915-41817f878d6e",
              "parentUUID": "c362332f-d86c-4230-a15e-82570b8c44e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af24a26d-af7d-4b43-ad06-4d0f1ddfdd45",
            "61309302-3b36-42d4-8915-41817f878d6e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3f5f29c-9645-4955-bb85-c775c9cc8cd5",
          "title": "POST subscription endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully add a subscription",
              "fullTitle": "POST subscription endpoint It should successfully add a subscription",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { interval: 'ANNUAL'};\nchai.request(server)\n    .post(\"/user/subscription/add\")\n    .set('auth-token', auth_token)\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('interval').eq('ANNUAL');\n        subscription_id = response.body.success.payload['id'];\n        done();\n    })",
              "err": {},
              "uuid": "820a34bb-8321-4818-a7f8-23c7962b6caa",
              "parentUUID": "d3f5f29c-9645-4955-bb85-c775c9cc8cd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully add a subscription - Invalid Interval",
              "fullTitle": "POST subscription endpoint It should not successfully add a subscription - Invalid Interval",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { interval: 'ANNUALLY'};\nchai.request(server)\n    .post(\"/user/subscription/add\")\n    .set('auth-token', auth_token)\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    })",
              "err": {},
              "uuid": "be87fb95-88b2-4e83-a2b9-6fcf7b0878ed",
              "parentUUID": "d3f5f29c-9645-4955-bb85-c775c9cc8cd5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "820a34bb-8321-4818-a7f8-23c7962b6caa",
            "be87fb95-88b2-4e83-a2b9-6fcf7b0878ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0adb259c-aeaa-4a96-8c09-65e2daaac171",
          "title": "GET all subscriptions endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all subscriptions",
              "fullTitle": "GET all subscriptions endpoint It should successfully return all subscriptions",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/subscription/all\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200)\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "ba9521b0-636e-449b-9135-2ad428d36b7a",
              "parentUUID": "0adb259c-aeaa-4a96-8c09-65e2daaac171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to successfully return all subscriptions",
              "fullTitle": "GET all subscriptions endpoint It should fail to successfully return all subscriptions",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/subscription/all\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "e70eaa2b-4ec8-4112-ada9-7a1dfce61d70",
              "parentUUID": "0adb259c-aeaa-4a96-8c09-65e2daaac171",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba9521b0-636e-449b-9135-2ad428d36b7a",
            "e70eaa2b-4ec8-4112-ada9-7a1dfce61d70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b81ce1c-070c-41d8-bf4d-e15fc6704ba5",
          "title": "GET active subscription endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all active subscriptions",
              "fullTitle": "GET active subscription endpoint It should successfully return all active subscriptions",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/subscription/active\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200)\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "f376f231-e3c3-40e8-856c-6f83ab2a7b52",
              "parentUUID": "0b81ce1c-070c-41d8-bf4d-e15fc6704ba5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should fail to successfully return all active subscriptions",
              "fullTitle": "GET active subscription endpoint It should fail to successfully return all active subscriptions",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/user/subscription/all\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "17d673ba-6579-4040-8974-eb70f0e7d1d7",
              "parentUUID": "0b81ce1c-070c-41d8-bf4d-e15fc6704ba5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f376f231-e3c3-40e8-856c-6f83ab2a7b52",
            "17d673ba-6579-4040-8974-eb70f0e7d1d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "282666bc-f673-4b4c-bdb7-324bbdbe174f",
          "title": "UPDATE subscription endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully cancel the subscription",
              "fullTitle": "UPDATE subscription endpoint It should successfully cancel the subscription",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .put(\"/user/subscription/cancel/\" + subscription_id)\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        done();\n    })",
              "err": {},
              "uuid": "42ae8d1c-0e78-4f7e-b35a-9e0cc65eeb11",
              "parentUUID": "282666bc-f673-4b4c-bdb7-324bbdbe174f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully cancel the subscription",
              "fullTitle": "UPDATE subscription endpoint It should not successfully cancel the subscription",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .put(\"/user/subscription/cancel/\" + invalid_subscription_id)\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    })",
              "err": {},
              "uuid": "52b154a1-5105-4d58-8bc4-21e489fec268",
              "parentUUID": "282666bc-f673-4b4c-bdb7-324bbdbe174f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42ae8d1c-0e78-4f7e-b35a-9e0cc65eeb11",
            "52b154a1-5105-4d58-8bc4-21e489fec268"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "68c9f76f-5edf-46a7-b5e8-7e69cb662528",
          "title": "AUTHENTICATE user endpoint for item endpoints",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully authenticate the user",
              "fullTitle": "AUTHENTICATE user endpoint for item endpoints It should successfully authenticate the user",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = {\n    uid: 'mochatest',\n    password: 'Password123.'\n};\n    \nchai.request(server)\n    .post(\"/user/auth\")\n    .send(user)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.header.should.have.property('auth-token');\n        auth_token = response.header['auth-token'];\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('username');\n        response.body.success.payload.should.have.property('organisation');\n        done();\n    });",
              "err": {},
              "uuid": "94c35826-ed00-474b-8940-4eee81af53eb",
              "parentUUID": "68c9f76f-5edf-46a7-b5e8-7e69cb662528",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94c35826-ed00-474b-8940-4eee81af53eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 63,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f61115e-ae6f-4b6c-a919-ebf5f3d2b34d",
          "title": "POST item endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully add a new item",
              "fullTitle": "POST item endpoint It should successfully add a new item",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const item = {\n    name: \"iPhone 7\",\n    brand: \"Apple\"\n};\nchai.request(server)\n    .post(\"/items/item\")\n    .set('auth-token', auth_token)\n    .send(item)\n    .end((error, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.item.should.have.property('name').eq(item.name);\n        response.body.success.payload.item.should.have.property('brand').eq(item.brand);\n        item_id = response.body.success.payload.item['id'];\n        done();\n    });",
              "err": {},
              "uuid": "858e171f-eb29-4500-adec-353bb732be7a",
              "parentUUID": "9f61115e-ae6f-4b6c-a919-ebf5f3d2b34d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully add a new item - null property",
              "fullTitle": "POST item endpoint It should not successfully add a new item - null property",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const item = {\n    name: '',\n    brand: 'Samsung Electronics'\n};\nchai.request(server)\n.post(\"/items/item\")\n.set('auth-token', auth_token)\n.send(item)\n.end((error, response) => {\n    response.should.have.status(400);\n    done();\n});",
              "err": {},
              "uuid": "a7500707-77ea-4c75-a9d4-c8d76116bf7b",
              "parentUUID": "9f61115e-ae6f-4b6c-a919-ebf5f3d2b34d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully add a new item - invalid token",
              "fullTitle": "POST item endpoint It should not successfully add a new item - invalid token",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const item = {\n    name: 'Samsung Galaxy ZFlip 3',\n    brand: 'Samsung Electronics'\n};\nchai.request(server)\n.post(\"/items/item\")\n.set('auth-token', invalid_auth_token)\n.send(item)\n.end((error, response) => {\n    response.should.have.status(401);\n    done();\n});",
              "err": {},
              "uuid": "abb0adf5-922a-4df9-9f29-3b5d9b67707d",
              "parentUUID": "9f61115e-ae6f-4b6c-a919-ebf5f3d2b34d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "858e171f-eb29-4500-adec-353bb732be7a",
            "a7500707-77ea-4c75-a9d4-c8d76116bf7b",
            "abb0adf5-922a-4df9-9f29-3b5d9b67707d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "00b988d2-dd8a-4e2d-b5dc-3681451b0c30",
          "title": "GET All items endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all items",
              "fullTitle": "GET All items endpoint It should successfully return all items",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/items/item/all\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "3bb9a43f-18fb-4422-a927-d4e291f4a278",
              "parentUUID": "00b988d2-dd8a-4e2d-b5dc-3681451b0c30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return all items",
              "fullTitle": "GET All items endpoint It should not successfully return all items",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/items/item/all\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    });",
              "err": {},
              "uuid": "1d947e58-13a4-4077-9662-98b15b88be97",
              "parentUUID": "00b988d2-dd8a-4e2d-b5dc-3681451b0c30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bb9a43f-18fb-4422-a927-d4e291f4a278",
            "1d947e58-13a4-4077-9662-98b15b88be97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "994de087-06fc-4c0a-b46b-54bcbb156a1c",
          "title": "GET item by ID",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return the item with that ID",
              "fullTitle": "GET item by ID It should successfully return the item with that ID",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/items/item/\" + item_id)\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('name').eq('iPhone 7');\n        done();\n    })",
              "err": {},
              "uuid": "a445be52-6ffb-4021-aa8d-567798131c75",
              "parentUUID": "994de087-06fc-4c0a-b46b-54bcbb156a1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return an item with that ID",
              "fullTitle": "GET item by ID It should not successfully return an item with that ID",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/items/item/\" + 2098787)\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    });",
              "err": {},
              "uuid": "2e09c233-9a94-44da-92a6-4dd888056ea4",
              "parentUUID": "994de087-06fc-4c0a-b46b-54bcbb156a1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a445be52-6ffb-4021-aa8d-567798131c75",
            "2e09c233-9a94-44da-92a6-4dd888056ea4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a6f8f2d9-a088-4438-9c77-c2491c7c5549",
          "title": "GET item by brand",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return items for that brand",
              "fullTitle": "GET item by brand It should successfully return items for that brand",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let brand = { brand: 'Samsung Electronics'};\nchai.request(server)\n    .get(\"/items/brand\")\n    .set('auth-token', auth_token)\n    .send(brand)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "645f652e-41e0-4281-b275-738fc9e10ad2",
              "parentUUID": "a6f8f2d9-a088-4438-9c77-c2491c7c5549",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return items for that brand",
              "fullTitle": "GET item by brand It should not successfully return items for that brand",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let brand = { brand: 'Oppo'};\nchai.request(server)\n    .get(\"/items/brand\")\n    .set('auth-token', auth_token)\n    .send(brand)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    })",
              "err": {},
              "uuid": "889aa316-0034-41ad-92c3-d736d3c4f9a7",
              "parentUUID": "a6f8f2d9-a088-4438-9c77-c2491c7c5549",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "645f652e-41e0-4281-b275-738fc9e10ad2",
            "889aa316-0034-41ad-92c3-d736d3c4f9a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "58e9983a-114b-43de-8287-f049e06a2e4e",
          "title": "GET all brands",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should return all brands",
              "fullTitle": "GET all brands It should return all brands",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/items/brand/all\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "2ca0b0ef-787f-452a-8917-1c391788dc5a",
              "parentUUID": "58e9983a-114b-43de-8287-f049e06a2e4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return items for that brand",
              "fullTitle": "GET all brands It should not successfully return items for that brand",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/items/brand/all\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "dca7d101-5247-4383-9512-805b3d48a44a",
              "parentUUID": "58e9983a-114b-43de-8287-f049e06a2e4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ca0b0ef-787f-452a-8917-1c391788dc5a",
            "dca7d101-5247-4383-9512-805b3d48a44a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f1742c45-5d1d-4e48-875e-ab9849156c85",
          "title": "AUTHENTICATE user endpoint for review endpoints",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully authenticate the user",
              "fullTitle": "AUTHENTICATE user endpoint for review endpoints It should successfully authenticate the user",
              "timedOut": false,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = {\n    uid: 'mochatest',\n    password: 'Password123.'\n};\n    \nchai.request(server)\n    .post(\"/user/auth\")\n    .send(user)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.header.should.have.property('auth-token');\n        auth_token = response.header['auth-token'];\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('username');\n        response.body.success.payload.should.have.property('organisation');\n        done();\n    });",
              "err": {},
              "uuid": "39b560a8-910d-4cc3-b212-74afcc8db61d",
              "parentUUID": "f1742c45-5d1d-4e48-875e-ab9849156c85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39b560a8-910d-4cc3-b212-74afcc8db61d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eaa57d2a-fa27-4c0f-b374-1aeaba7ef6c9",
          "title": "POST key endpoint for review endpoints",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully post a new api key",
              "fullTitle": "POST key endpoint for review endpoints It should successfully post a new api key",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .post(\"/user/keys/new\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('id');\n        response.body.success.payload.should.have.property('key');\n        response.body.success.payload.should.have.property('date_generated');\n        response.body.success.payload.should.have.property('enabled');\n        response.body.success.payload.should.have.property('user_id');\n        api_key = response.body.success.payload['key'];\n        done();\n    })",
              "err": {},
              "uuid": "627ed60e-bdca-4fd3-8995-36d422025b11",
              "parentUUID": "eaa57d2a-fa27-4c0f-b374-1aeaba7ef6c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "627ed60e-bdca-4fd3-8995-36d422025b11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9eada1f9-617d-4efe-a96a-33dc3f980dcc",
          "title": "POST review endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully submit a review",
              "fullTitle": "POST review endpoint It should successfully submit a review",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const review = {\n    reviewer: 'testuser',\n    rating: 8,\n    description: 'This phone is fantastic',\n    item_id: 1,\n    api_key: api_key\n};\n    \nchai.request(server)\n    .post(\"/reviews/add\")\n    .send(review)\n    .end((error, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('reviewer');\n        review_id = response.body.success.payload['id'];\n        done();\n    });",
              "err": {},
              "uuid": "d31f8b96-33e7-4890-9b28-ae0e492f61cb",
              "parentUUID": "9eada1f9-617d-4efe-a96a-33dc3f980dcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully submit a review",
              "fullTitle": "POST review endpoint It should not successfully submit a review",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const review = {\n    reviewer: 'testuser',\n    rating: 8,\n    description: 'This phone is fantastic',\n    item_id: 1,\n    api_key: invalid_api_key\n};\nchai.request(server)\n    .post(\"/reviews/add\")\n    .send(review)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    });",
              "err": {},
              "uuid": "3c7b243e-eefd-425b-ae56-477375b09768",
              "parentUUID": "9eada1f9-617d-4efe-a96a-33dc3f980dcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d31f8b96-33e7-4890-9b28-ae0e492f61cb",
            "3c7b243e-eefd-425b-ae56-477375b09768"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "80f64307-a94e-4962-8f76-5c0d8c57091d",
          "title": "GET ALL reviews endpoint endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all reviews for this user",
              "fullTitle": "GET ALL reviews endpoint endpoint It should successfully return all reviews for this user",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const key = { api_key: api_key };\nchai.request(server)\n    .get(\"/reviews/all\")\n    .send(key)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "500c8091-0b3c-40bd-ba2b-bcc9e0651bd9",
              "parentUUID": "80f64307-a94e-4962-8f76-5c0d8c57091d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return all reviews",
              "fullTitle": "GET ALL reviews endpoint endpoint It should not successfully return all reviews",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const key = { api_key: invalid_api_key };\nchai.request(server)\n    .get(\"/reviews/all\")\n    .send(key)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    })",
              "err": {},
              "uuid": "ff6948ce-b4f0-4aea-965f-bd59bb12ec95",
              "parentUUID": "80f64307-a94e-4962-8f76-5c0d8c57091d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "500c8091-0b3c-40bd-ba2b-bcc9e0651bd9",
            "ff6948ce-b4f0-4aea-965f-bd59bb12ec95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "408f70e7-9b93-4663-a095-7921a95f3e27",
          "title": "GET ALL local reviews by product name endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all local reviews by this name",
              "fullTitle": "GET ALL local reviews by product name endpoint It should successfully return all local reviews by this name",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    api_key: api_key,\n    name: 'Samsung Galaxy S22 Ultra'\n};\nchai.request(server)\n    .get(\"/reviews/local/item/name\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(200)\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "96c50710-70df-4076-a014-0f48da1426a2",
              "parentUUID": "408f70e7-9b93-4663-a095-7921a95f3e27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return all local reviews by this name",
              "fullTitle": "GET ALL local reviews by product name endpoint It should not successfully return all local reviews by this name",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    api_key: api_key,\n    name: 'Blackberry'\n}; \nchai.request(server)\n    .get(\"/reviews/local/item/name\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(400)\n        done();\n    })",
              "err": {},
              "uuid": "288ab808-497c-4665-a197-b75402e8b61e",
              "parentUUID": "408f70e7-9b93-4663-a095-7921a95f3e27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96c50710-70df-4076-a014-0f48da1426a2",
            "288ab808-497c-4665-a197-b75402e8b61e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "960d0ba4-a893-4a27-b6be-ea502f63ff48",
          "title": "GET ALL local reviews by product ID endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all local reviews for that product",
              "fullTitle": "GET ALL local reviews by product ID endpoint It should successfully return all local reviews for that product",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    api_key: api_key\n};\nchai.request(server)\n    .get(\"/reviews/local/item/1\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(200)\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    });",
              "err": {},
              "uuid": "6eb4818d-a244-4434-80d5-25d551360c54",
              "parentUUID": "960d0ba4-a893-4a27-b6be-ea502f63ff48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return all local reviews for that product",
              "fullTitle": "GET ALL local reviews by product ID endpoint It should not successfully return all local reviews for that product",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    api_key: api_key\n}; \nchai.request(server)\n    .get(\"/reviews/local/item/7887767\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(400)\n        done();\n    })",
              "err": {},
              "uuid": "1dcef736-ec4d-4a5e-8ee1-7d46d61cf80b",
              "parentUUID": "960d0ba4-a893-4a27-b6be-ea502f63ff48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6eb4818d-a244-4434-80d5-25d551360c54",
            "1dcef736-ec4d-4a5e-8ee1-7d46d61cf80b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b2957877-2e4f-4d07-a6c6-0cbcc33b5d94",
          "title": "GET ALL global reviews by product name endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all global reviews by this name",
              "fullTitle": "GET ALL global reviews by product name endpoint It should successfully return all global reviews by this name",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    api_key: api_key,\n    name: 'Samsung Galaxy S22 Ultra'\n};\nchai.request(server)\n    .get(\"/reviews/global/item/name\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(200)\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "50d78fe9-8539-4bcb-9761-dc0dc9640e8e",
              "parentUUID": "b2957877-2e4f-4d07-a6c6-0cbcc33b5d94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return all global reviews by this name",
              "fullTitle": "GET ALL global reviews by product name endpoint It should not successfully return all global reviews by this name",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    api_key: api_key,\n    name: 'Blackberry'\n}; \nchai.request(server)\n    .get(\"/reviews/global/item/name\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(400)\n        done();\n    })",
              "err": {},
              "uuid": "b654f306-eaa3-4ab5-9064-0120b3445237",
              "parentUUID": "b2957877-2e4f-4d07-a6c6-0cbcc33b5d94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50d78fe9-8539-4bcb-9761-dc0dc9640e8e",
            "b654f306-eaa3-4ab5-9064-0120b3445237"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8485c926-bf37-4f8b-974e-42410e99cbf9",
          "title": "GET ALL global reviews by product ID endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return all global reviews for that product",
              "fullTitle": "GET ALL global reviews by product ID endpoint It should successfully return all global reviews for that product",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    api_key: api_key\n};\nchai.request(server)\n    .get(\"/reviews/global/item/1\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(200)\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    });",
              "err": {},
              "uuid": "73fd3fed-9c20-4d24-918e-4f5f3f177873",
              "parentUUID": "8485c926-bf37-4f8b-974e-42410e99cbf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return all global reviews for that product",
              "fullTitle": "GET ALL global reviews by product ID endpoint It should not successfully return all global reviews for that product",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    api_key: api_key\n}; \nchai.request(server)\n    .get(\"/reviews/global/item/7887767\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(400)\n        done();\n    })",
              "err": {},
              "uuid": "42e36cf3-9468-4c81-8769-2dd2e01b9149",
              "parentUUID": "8485c926-bf37-4f8b-974e-42410e99cbf9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73fd3fed-9c20-4d24-918e-4f5f3f177873",
            "42e36cf3-9468-4c81-8769-2dd2e01b9149"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "84849101-4843-49e8-8d79-375042c5d05a",
          "title": "GET review by ID endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return the review with the corresponding ID",
              "fullTitle": "GET review by ID endpoint It should successfully return the review with the corresponding ID",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = {\n    api_key: api_key\n};\nchai.request(server)\n    .get(\"/reviews/\" + review_id)\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(200)\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('id').eq(review_id);\n        done();\n    });",
              "err": {},
              "uuid": "805d0682-c7c7-465c-8314-c5753185e148",
              "parentUUID": "84849101-4843-49e8-8d79-375042c5d05a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return the review with the corresponding ID",
              "fullTitle": "GET review by ID endpoint It should not successfully return the review with the corresponding ID",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = {\n    api_key: api_key\n};\nchai.request(server)\n    .get(\"/reviews/\" + 88787667)\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(400)\n        done();\n    });",
              "err": {},
              "uuid": "08ef0105-d06c-447b-9bbb-023c2db6c51d",
              "parentUUID": "84849101-4843-49e8-8d79-375042c5d05a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "805d0682-c7c7-465c-8314-c5753185e148",
            "08ef0105-d06c-447b-9bbb-023c2db6c51d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "140541a5-5b1b-4343-911e-ee26325582fd",
          "title": "PUT review endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully update the review",
              "fullTitle": "PUT review endpoint It should successfully update the review",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const review = {\n    id: review_id,\n    reviewer: 'testuser',\n    rating: 6,\n    description: 'This phone was fantastic but I have started to get display issues.',\n    item_id: 1,\n    api_key: api_key\n};\nchai.request(server)\n    .put(\"/reviews/\")\n    .send(review)\n    .end((error, response) => {\n        response.should.have.status(200)\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('description').eq(review.description);\n        done();\n    });",
              "err": {},
              "uuid": "0edada85-8e3e-4abe-b3c5-bb06260b76be",
              "parentUUID": "140541a5-5b1b-4343-911e-ee26325582fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully update the review - invalid API key",
              "fullTitle": "PUT review endpoint It should not successfully update the review - invalid API key",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const review = {\n    id: review_id,\n    reviewer: 'testuser',\n    rating: 6,\n    description: 'This phone was fantastic but I have started to get display issues.',\n    item_id: 1,\n    api_key: invalid_api_key\n};\nchai.request(server)\n    .put(\"/reviews/\")\n    .send(review)\n    .end((error, response) => {\n        response.should.have.status(400)\n        done();\n    });",
              "err": {},
              "uuid": "457b18e2-6055-4b1d-8f20-9d96f2d55adb",
              "parentUUID": "140541a5-5b1b-4343-911e-ee26325582fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully update the review - invalid review structure",
              "fullTitle": "PUT review endpoint It should not successfully update the review - invalid review structure",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const review = {\n    id: review_id,\n    rating: 6,\n    description: 'This phone was fantastic but I have started to get display issues.',\n    item_id: 1,\n    api_key: api_key\n};\nchai.request(server)\n    .put(\"/reviews/\")\n    .send(review)\n    .end((error, response) => {\n        response.should.have.status(400)\n        done();\n    });",
              "err": {},
              "uuid": "053daf43-7c2d-4f69-8886-85374122ab47",
              "parentUUID": "140541a5-5b1b-4343-911e-ee26325582fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0edada85-8e3e-4abe-b3c5-bb06260b76be",
            "457b18e2-6055-4b1d-8f20-9d96f2d55adb",
            "053daf43-7c2d-4f69-8886-85374122ab47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ca06d07-e65f-4c81-9624-8425ef754c83",
          "title": "DELETE review endpoint",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should not successfully delete the review",
              "fullTitle": "DELETE review endpoint It should not successfully delete the review",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    id: 134535454564,\n    api_key: api_key\n};\nchai.request(server)\n    .delete(\"/reviews/\")\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(400);\n        done();\n    })",
              "err": {},
              "uuid": "0a051fd0-92d4-46fb-8db0-a2cefdce03fe",
              "parentUUID": "7ca06d07-e65f-4c81-9624-8425ef754c83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should successfully delete the review",
              "fullTitle": "DELETE review endpoint It should successfully delete the review",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const req = {\n    id: review_id,\n    api_key: api_key\n};\nchai.request(server)\n.delete(\"/reviews/\")\n.send(req)\n.end((error, response) => {\n    response.should.have.status(201);\n    response.body.should.be.a('object');\n    response.body.should.have.property('success');\n    response.body.success.should.have.property('status');\n    response.body.success.should.have.property('payload').eq(review_id);\n    done();\n})",
              "err": {},
              "uuid": "af284447-209d-43ad-8f50-86e670127f52",
              "parentUUID": "7ca06d07-e65f-4c81-9624-8425ef754c83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a051fd0-92d4-46fb-8db0-a2cefdce03fe",
            "af284447-209d-43ad-8f50-86e670127f52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61ab2c18-2941-460e-b8b6-656b21d2e833",
          "title": "AUTHENTICATE user endpoint for business intelligence endpoints",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully authenticate the user",
              "fullTitle": "AUTHENTICATE user endpoint for business intelligence endpoints It should successfully authenticate the user",
              "timedOut": false,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = {\n    uid: 'admin',\n    password: 'Password123.'\n};\n    \nchai.request(server)\n    .post(\"/user/auth\")\n    .send(user)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.header.should.have.property('auth-token');\n        auth_token = response.header['auth-token'];\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('username');\n        response.body.success.payload.should.have.property('organisation');\n        done();\n    });",
              "err": {},
              "uuid": "fddd594a-100d-49b4-8779-003ab6382d69",
              "parentUUID": "61ab2c18-2941-460e-b8b6-656b21d2e833",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fddd594a-100d-49b4-8779-003ab6382d69"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "50bad48e-111f-4c93-8f87-d42ae45ebd99",
          "title": "GET local products by lowest average rating",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return local products by lowest average rating",
              "fullTitle": "GET local products by lowest average rating It should successfully return local products by lowest average rating",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/lowest/avg/local\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "73c3ecfc-7224-4756-b7be-e50854df51db",
              "parentUUID": "50bad48e-111f-4c93-8f87-d42ae45ebd99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return local products by lowest average rating",
              "fullTitle": "GET local products by lowest average rating It should not successfully return local products by lowest average rating",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/lowest/avg/local\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "41f422fe-0f1d-4d1a-b37d-3f3211202984",
              "parentUUID": "50bad48e-111f-4c93-8f87-d42ae45ebd99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73c3ecfc-7224-4756-b7be-e50854df51db",
            "41f422fe-0f1d-4d1a-b37d-3f3211202984"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "22df3258-2e32-47dc-a19d-53cd643c3d65",
          "title": "GET local products by highest average rating",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return local products by highest average rating",
              "fullTitle": "GET local products by highest average rating It should successfully return local products by highest average rating",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/highest/avg/local\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "963158e8-ec3d-47f6-a3e7-5f4b93b4c391",
              "parentUUID": "22df3258-2e32-47dc-a19d-53cd643c3d65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return local products by highest average rating",
              "fullTitle": "GET local products by highest average rating It should not successfully return local products by highest average rating",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/highest/avg/local\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "a574ad1b-8d35-4b02-a388-a1a9746d3aac",
              "parentUUID": "22df3258-2e32-47dc-a19d-53cd643c3d65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "963158e8-ec3d-47f6-a3e7-5f4b93b4c391",
            "a574ad1b-8d35-4b02-a388-a1a9746d3aac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c6cb7e7-cd39-408b-bd5f-e8682dbc92c3",
          "title": "GET local product by lowest number of reviews",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return local products by lowest number of reviews",
              "fullTitle": "GET local product by lowest number of reviews It should successfully return local products by lowest number of reviews",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/lowest/count\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "e5f9bb58-e5e9-42a7-8859-1e85c0984ecd",
              "parentUUID": "4c6cb7e7-cd39-408b-bd5f-e8682dbc92c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return local products by lowest number of reviews",
              "fullTitle": "GET local product by lowest number of reviews It should not successfully return local products by lowest number of reviews",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/lowest/count\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "8912cb10-5970-42bd-b90d-a747cab5fe73",
              "parentUUID": "4c6cb7e7-cd39-408b-bd5f-e8682dbc92c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5f9bb58-e5e9-42a7-8859-1e85c0984ecd",
            "8912cb10-5970-42bd-b90d-a747cab5fe73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a00b037e-6c17-494d-b341-68685a105db8",
          "title": "GET local products by highest number of reviews",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return local products by highest number of reviews",
              "fullTitle": "GET local products by highest number of reviews It should successfully return local products by highest number of reviews",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/highest/count\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "a6174f2a-e40b-4375-814a-16ddd8b88ee0",
              "parentUUID": "a00b037e-6c17-494d-b341-68685a105db8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return local products by highest number of reviews",
              "fullTitle": "GET local products by highest number of reviews It should not successfully return local products by highest number of reviews",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/highest/count\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "7e60494e-e0e4-46d6-9251-1a2e601c4960",
              "parentUUID": "a00b037e-6c17-494d-b341-68685a105db8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6174f2a-e40b-4375-814a-16ddd8b88ee0",
            "7e60494e-e0e4-46d6-9251-1a2e601c4960"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "28d7c961-45bd-4499-bf82-e3f6f9efc5f9",
          "title": "GET leaderboard by number of reviews",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return a leaderboard payload",
              "fullTitle": "GET leaderboard by number of reviews It should successfully return a leaderboard payload",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/leaderboard\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.user.should.be.a('object');\n        response.body.success.payload.leaderboard.should.be.a('array');\n        response.body.success.payload.leaderboard.length.should.be.greaterThan(0);\n        done();\n    });",
              "err": {},
              "uuid": "c6a07333-90a8-4b0b-81ea-c8c58991501d",
              "parentUUID": "28d7c961-45bd-4499-bf82-e3f6f9efc5f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return a leaderboard payload",
              "fullTitle": "GET leaderboard by number of reviews It should not successfully return a leaderboard payload",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/leaderboard\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "62446a3b-79d8-4e61-925c-8f7b1414f834",
              "parentUUID": "28d7c961-45bd-4499-bf82-e3f6f9efc5f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6a07333-90a8-4b0b-81ea-c8c58991501d",
            "62446a3b-79d8-4e61-925c-8f7b1414f834"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4cb16ea3-733f-4c15-bb6a-e5e085fd6178",
          "title": "GET global products by highest average rating",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return products by global highest average rating",
              "fullTitle": "GET global products by highest average rating It should successfully return products by global highest average rating",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/highest/avg/global\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "3cdbe4f7-e04c-4971-938e-eaad1b075b0d",
              "parentUUID": "4cb16ea3-733f-4c15-bb6a-e5e085fd6178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return products by global highest average rating",
              "fullTitle": "GET global products by highest average rating It should not successfully return products by global highest average rating",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/highest/avg/global\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "e06c3904-b1dd-4225-9fd1-06c5ce95e03e",
              "parentUUID": "4cb16ea3-733f-4c15-bb6a-e5e085fd6178",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3cdbe4f7-e04c-4971-938e-eaad1b075b0d",
            "e06c3904-b1dd-4225-9fd1-06c5ce95e03e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f149c2cd-20bd-4c93-97c9-d42b6c7ad503",
          "title": "GET global products by lowest average rating",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return products by global lowest average rating",
              "fullTitle": "GET global products by lowest average rating It should successfully return products by global lowest average rating",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/lowest/avg/global\")\n    .set('auth-token', auth_token)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.be.a('array');\n        response.body.success.payload.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "785f0c4b-c4f1-4b3c-bc61-5b7eed0a40a1",
              "parentUUID": "f149c2cd-20bd-4c93-97c9-d42b6c7ad503",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return products by global lowest average rating",
              "fullTitle": "GET global products by lowest average rating It should not successfully return products by global lowest average rating",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(server)\n    .get(\"/bi/lowest/avg/global\")\n    .set('auth-token', invalid_auth_token)\n    .end((error, response) => {\n        response.should.have.status(401);\n        done();\n    })",
              "err": {},
              "uuid": "b03421f9-df2b-420f-ad1d-a02d2c5472b9",
              "parentUUID": "f149c2cd-20bd-4c93-97c9-d42b6c7ad503",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "785f0c4b-c4f1-4b3c-bc61-5b7eed0a40a1",
            "b03421f9-df2b-420f-ad1d-a02d2c5472b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01ffabde-86ec-4b58-a141-6d3ef911168a",
          "title": "GET recent global reviews",
          "fullFile": "C:\\Users\\rjhay\\Desktop\\Review\\review-backend\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully return global recent product reviews - MONTH",
              "fullTitle": "GET recent global reviews It should successfully return global recent product reviews - MONTH",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { timeframe: 'MONTH' };\nchai.request(server)\n    .post(\"/bi/recent\")\n    .set('auth-token', auth_token)\n    .send(req)\n    .end((error, response) => {\n        response.should.have.status(200);\n        response.body.should.be.a('object');\n        response.body.should.have.property('success');\n        response.body.success.should.have.property('status');\n        response.body.success.should.have.property('payload');\n        response.body.success.payload.should.have.property('reviews');\n        response.body.success.payload.reviews.should.be.a('array');\n        response.body.success.payload.reviews.length.should.be.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "655dd76d-294f-4db2-ae0f-4dcefbf4d7a6",
              "parentUUID": "01ffabde-86ec-4b58-a141-6d3ef911168a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should successfully return global recent product reviews - WEEK",
              "fullTitle": "GET recent global reviews It should successfully return global recent product reviews - WEEK",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { timeframe: 'WEEK' };\nchai.request(server)\n.post(\"/bi/recent\")\n.set('auth-token', auth_token)\n.send(req)\n.end((error, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a('object');\n    response.body.should.have.property('success');\n    response.body.success.should.have.property('status');\n    response.body.success.should.have.property('payload');\n    response.body.success.payload.should.have.property('reviews');\n    response.body.success.payload.reviews.should.be.a('array');\n    response.body.success.payload.reviews.length.should.be.greaterThan(0);\n    done();\n})",
              "err": {},
              "uuid": "0fce3e92-5fd1-4eb6-9c45-ebb94487eeeb",
              "parentUUID": "01ffabde-86ec-4b58-a141-6d3ef911168a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should successfully return global recent product reviews - DAY",
              "fullTitle": "GET recent global reviews It should successfully return global recent product reviews - DAY",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { timeframe: 'DAY' };\nchai.request(server)\n.post(\"/bi/recent\")\n.set('auth-token', auth_token)\n.send(req)\n.end((error, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a('object');\n    response.body.should.have.property('success');\n    response.body.success.should.have.property('status');\n    response.body.success.should.have.property('payload');\n    response.body.success.payload.should.have.property('reviews');\n    response.body.success.payload.reviews.should.be.a('array');\n    response.body.success.payload.reviews.length.should.be.greaterThan(0);\n    done();\n})",
              "err": {},
              "uuid": "93501581-c2dd-42f8-9b59-bfdb98d90a82",
              "parentUUID": "01ffabde-86ec-4b58-a141-6d3ef911168a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return global recent product reviews - Invalid auth token",
              "fullTitle": "GET recent global reviews It should not successfully return global recent product reviews - Invalid auth token",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { timeframe: 'MONTH' };\nchai.request(server)\n.post(\"/bi/recent\")\n.set('auth-token', invalid_auth_token)\n.send(req)\n.end((error, response) => {\n    response.should.have.status(401);\n    done();\n})",
              "err": {},
              "uuid": "c3155886-cdf1-47f9-a99e-4007db32f9bd",
              "parentUUID": "01ffabde-86ec-4b58-a141-6d3ef911168a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should not successfully return global recent product reviews - Invalid tiemframe",
              "fullTitle": "GET recent global reviews It should not successfully return global recent product reviews - Invalid tiemframe",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let req = { timeframe: 'YEAR' };\nchai.request(server)\n.post(\"/bi/recent\")\n.set('auth-token', auth_token)\n.send(req)\n.end((error, response) => {\n    response.should.have.status(400);\n    done();\n})",
              "err": {},
              "uuid": "f66d8078-ba8e-4b33-a7af-2c9f2457cb16",
              "parentUUID": "01ffabde-86ec-4b58-a141-6d3ef911168a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "655dd76d-294f-4db2-ae0f-4dcefbf4d7a6",
            "0fce3e92-5fd1-4eb6-9c45-ebb94487eeeb",
            "93501581-c2dd-42f8-9b59-bfdb98d90a82",
            "c3155886-cdf1-47f9-a99e-4007db32f9bd",
            "f66d8078-ba8e-4b33-a7af-2c9f2457cb16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}